pipeline {
    agent any
    environment {
        SONAR_TOKEN = credentials('sonar-token-id')  // Ensure this credential is stored in Jenkins
    }
    stages {
        stage('Checkout') {
            steps {
                git branch: 'sonar', url: 'https://github.com/Mohammad-Arafath/JUnit_Math.git'
            }
        }

        stage('Compile') {
            steps {
                script {
                    bat '''
                    cd JUnit_Java
                    if not exist bin mkdir bin
                    javac -cp ".;lib\\junit-jupiter-api-5.11.4.jar;lib\\junit-jupiter-engine-5.11.4.jar;lib\\junit-platform-console-standalone-1.11.4.jar" -d bin JUinit_Test\\MathUtils.java JUinit_Test\\MathUtilsTest.java
                    '''
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    bat '''
                    cd JUnit_Java
                    java -jar lib\\junit-platform-console-standalone-1.11.4.jar --class-path bin --scan-class-path --reports-dir bin\\test-logs
                    '''
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withCredentials([string(credentialsId: 'sonar-token-id', variable: 'SONAR_TOKEN')]) {
                    bat '''
                    C:\\sonar-scanner\\bin\\sonar-scanner -Dsonar.projectKey=JUnit_Math -Dsonar.sources=. -Dsonar.java.binaries=bin -Dsonar.host.url=http://localhost:9000 -Dsonar.login=%SONAR_TOKEN%
                    '''
                }
            }
        }
    }

    post {
        success {
            emailext subject: "Jenkins Build SUCCESS: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                body: """
                ‚úÖ Build SUCCESS üéâ
                - Job: ${env.JOB_NAME}
                - Build Number: ${env.BUILD_NUMBER}
                - View Build: ${env.BUILD_URL}
                """,
                recipientProviders: [[$class: 'DevelopersRecipientProvider']],
                to: 'your-email@example.com'
        }

        failure {
            emailext subject: "Jenkins Build FAILURE: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                body: """
                ‚ùå Build FAILED üö®
                - Job: ${env.JOB_NAME}
                - Build Number: ${env.BUILD_NUMBER}
                - View Build: ${env.BUILD_URL}
                - Logs: ${env.BUILD_URL}console
                """,
                recipientProviders: [[$class: 'DevelopersRecipientProvider']],
                to: 'your-email@example.com'
        }
    }
}
